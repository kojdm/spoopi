{"version":3,"sources":["components/spoopi-arrow.png","components/SpoopiStatus.js","components/SpoopiNav.js","components/categories/CategoryBox.js","components/NextButton.js","components/categories/CategoriesContainer.js","components/timer/TimerInput.js","components/timer/TimerContainer.js","components/SpoopiLoader.js","components/AddToSpotifyButton.js","components/tracks/TrackBox.js","components/tracks/TracksContainer.js","components/playlist/PlaylistContainer.js","components/BackButton.js","components/SpoopiTip.js","components/SpoopiContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SpoopiStatus","spoopiPlaylist","className","Object","entries","map","item","key","val","c","replace","join","m","h","Math","floor","href","target","rel","getSpoopiStatus","SpoopiNav","current_page","useState","window","innerWidth","showInfo","setShowInfo","onClick","CategoryBox","id","name","image_url","handleCatCount","handleCategories","isSelected","src","alt","NextButton","content","nextable","reload","nextPage","CategoriesContainer","countryCode","setCountryCode","pageTraversal","selectedCategories","allCategories","setAllCategories","length","catCount","setCatCount","useEffect","local_categories","JSON","parse","localStorage","getItem","local_countryCode","fetch","process","then","res","text","result","ind","indexOf","country_code","slice","setItem","json","categories","stringify","increment","new_count","cat","TimerInput","symbol","placeholder","setTime","value","readonly","hours","type","onChange","e","parseInt","readOnly","onBlur","TimerContainer","duration","handleDuration","initDuration","init_mins","init_hours","calculateInitDuration","setHours","mins","setMins","handleSetTime","arr","formatted_time","nextButtonContent","SpoopiLoader","warning","AddToSpotifyButton","setName","showSpoopiName","setShowSpoopiName","placeholderWords","setPlaceholderWords","base_url","word","charAt","toUpperCase","open","TrackBox","track","useIframe","title","frameborder","allowtransparency","allow","artists","TracksContainer","tracks","handleTracks","setBackable","accessToken","setPlaylist","loading","setLoading","url","spoopi","track_uris","tr","uri","params","access_token","pl_name","category_ids","method","body","new_playlist","PlaylistContainer","playlist","timer","setTimeout","clearTimeout","BackButton","backPage","backable","SpoopiTip","tipContent","setTipContent","tipcon","arrow","SpoopiContainer","setCategories","setDuration","setTracks","setAccessToken","addEventListener","event","data","location","hash","substring","opener","postMessage","close","category_id","new_categories","cat_index","splice","push","h_in_s","m_in_s","initialPageState","pages","pageReducer","state","action","next_page_index","previous_page_index","Error","App","useReducer","pageState","track_count","spotify_url","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"qFAAAA,EAAOC,QAAU,IAA0B,0C,gcC+C5BC,MA5Cf,YAA2C,IAAnBC,EAAkB,EAAlBA,eA2BtB,OACE,yBAAKC,UAAU,gBACb,+BACIC,OAAOC,QAAQH,GAAgBI,KAAI,SAACC,GACpC,IAAKA,EAAK,GAAM,OAAO,KADsB,MA7B7B,SAACA,GACvB,IAAMC,EAAMD,EAAK,GACXE,EAAMF,EAAK,GACjB,OAAOC,GACL,IAAK,aACH,MAAO,CAAC,aAAcC,EAAIH,KAAI,SAAAI,GAAC,OAAIA,EAAEC,QAAQ,IAAK,QAAMC,KAAK,OAC/D,IAAK,WACH,IAAIC,EAAIJ,EAAM,GACRK,EAAIC,KAAKC,MAAMH,EAAI,IAGzB,MAAO,CAAC,WAAYC,EAAI,MAFxBD,GAAY,GAAJC,GAE2B,KACrC,IAAK,cACH,MAAO,CAAC,aAAcL,GACxB,IAAK,OACH,MAAO,CAAC,OAAQA,GAClB,IAAK,cACH,MAAO,CACL,eACA,uBAAGQ,KAAMR,EAAKS,OAAO,SAASC,IAAI,uBAAlC,6BAEJ,QACE,OAAO,MAUcC,CAAgBb,GAHU,mBAGtCC,EAHsC,KAGjCC,EAHiC,KAI7C,OAAO,4BACL,wBAAIN,UAAU,SAASK,GACvB,wBAAIL,UAAU,SAASM,UCVpBY,MAxBf,YAAsD,IAAjCC,EAAgC,EAAhCA,aAAcpB,EAAkB,EAAlBA,eAAkB,EACnBqB,mBAASC,OAAOC,YAAc,KADX,mBAC5CC,EAD4C,KAClCC,EADkC,KAQnD,OACE,yBAAKxB,UAAU,aACb,yBAAKA,UAAU,uBAAf,UACA,yBAAKA,UAAU,sBAAf,gCACA,yBAAKA,UAAW,eAAiBuB,EAAW,gBAAkB,IAAKE,QARhD,WACrBD,GAAaD,KAQU,eAAjBJ,EAAgC,IAAM,yCAEzB,eAAjBA,GAAiCI,GACjC,yBAAKvB,UAAU,wBAdJ,sLAgBM,eAAjBmB,GAAiCI,GAC/B,kBAAC,EAAD,CAAcxB,eAAgBA,M,kBCHvB2B,MAlBf,YAA6F,IAAtEC,EAAqE,EAArEA,GAAIC,EAAiE,EAAjEA,KAAMC,EAA2D,EAA3DA,UAAWC,EAAgD,EAAhDA,eAAgBC,EAAgC,EAAhCA,iBAAkBC,EAAc,EAAdA,WAU5E,OACE,yBAAKhC,UAAW,eAAiBgC,EAAa,qBAAuB,IAAKP,QAVxD,WAEIK,EADJE,GAAc,EAAI,IAGf,GACnBD,EAAiBJ,KAMjB,yBAAK3B,UAAU,iBAAiBiC,IAAKJ,EAAWK,IAAKP,IACrD,yBAAK3B,UAAU,iBAAiB4B,K,MCMvBO,MAnBf,YAA8D,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,OAAQC,EAAY,EAAZA,SAS/C,OACE,yBAAKvC,UAAW,cAAgBqC,EAAW,YAAc,IAAKZ,QATzC,WACrB,GAAIa,EACF,OAAOD,GAAYE,EAAS,UAG9BF,GAAYE,EAAS,UAKnB,yBAAKvC,UAAU,uBACZoC,EACCC,GAAY,0BAAMrC,UAAU,cAAhB,WC+DPwC,MAzEf,YAAoH,IAArFC,EAAoF,EAApFA,YAAaC,EAAuE,EAAvEA,eAAgBX,EAAuD,EAAvDA,iBAAkBY,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,mBAAsB,EACvExB,mBAAS,IAD8D,mBAC1GyB,EAD0G,KAC3FC,EAD2F,OAEjF1B,mBAASwB,EAAmBG,QAFqD,mBAE1GC,EAF0G,KAEhGC,EAFgG,KAIjHC,qBAAU,WACR,IAAMC,EAAmBC,KAAKC,MAAMC,aAAaC,QAAQ,kBACnDC,EAAoBF,aAAaC,QAAQ,eAC/C,GAAIJ,GAAoBK,EAGtB,OAFAd,EAAec,QACfV,EAAiBK,GAKnBM,MAAMC,4CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACC,IAAMC,EAAMD,EAAOE,QAAQ,OACrBC,EAAeH,EAAOI,MAAMH,EAAM,EAAGA,EAAM,GACjDrB,EAAeuB,GACfX,aAAaa,QAAQ,cAAeF,MAI1CR,MAAMC,+CADQjB,EAAc,iBAAmBA,EAAc,KAE1DkB,MAAK,SAAAC,GAAG,OAAIA,EAAIQ,UAChBT,MACC,SAACG,GACChB,EAAiBgB,EAAOO,YACxBf,aAAaa,QAAQ,gBAAiBf,KAAKkB,UAAUR,EAAOO,kBAGjE,CAAC5B,EAAaC,IAEjB,IAAMZ,EAAiB,SAACyC,GACtB,IAAMC,EAAYxB,EAAWuB,EAK7B,OAJIC,GAAa,GACfvB,EAAYuB,GAGPA,GAeT,OACE,yBAAKxE,UAAU,uBACZ6C,EAAc1C,KAAI,SAAAsE,GAAG,OACpB,kBAAC,EAAD,CACE9C,GAAI8C,EAAI9C,GACRC,KAAM6C,EAAI7C,KACVC,UAAW4C,EAAI5C,UACfC,eAAgBA,EAChBC,iBAAkBA,EAClBC,WAAYY,EAAmBoB,QAAQS,EAAI9C,KAAO,OAGpD,kBAAC,EAAD,CAAYS,QAvBC,IAAbY,EACK,kBAEAA,GAAY,EACZA,EAAW,YAGX,4BAgBqCX,SAAUW,GAAY,EAAGT,SAAUI,M,YCzBtE+B,MA9Cf,YAA+E,IAAzDC,EAAwD,EAAxDA,OAAQC,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,QAASC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MA+BnE,OACE,yBAAKhF,UAAU,cACb,2BACEiF,KAAK,SACLC,SAlCe,SAACC,GAEpBA,EAAEpE,OAAO+D,MAAQK,EAAEpE,OAAO+D,MAAMZ,MAAM,EADnB,GAGnB,IAAM5D,EAAM8E,SAASD,EAAEpE,OAAO+D,OACf,MAAXH,GAAkBrE,EAAM,GAC1B6E,EAAEpE,OAAO+D,MAAQ,GAEC,MAAXH,GACHrE,EAAM,KACR6E,EAAEpE,OAAO+D,MAAQ,IAIjBxE,EAAM,IAAG6E,EAAEpE,OAAO+D,MAAQ,GAE9BD,EAAQF,EAAQQ,EAAEpE,OAAO+D,QAmBrBF,YAAaA,EACbE,MAAiB,IAAVA,EAAc,GAAKA,EAC1BO,SAAUN,EACVO,OAnBa,SAACH,GAClB,GAAe,MAAXR,EAAJ,CAEA,IAAMrE,EAAM8E,SAASD,EAAEpE,OAAO+D,OAAS,IACvCE,EAAQI,SAASJ,GAAS,KACb,GAAK1E,EAAM,IACtBuE,EAAQF,EAAQ,QAehB,yBAAK3E,UAAU,gBAAgB2E,KCuCtBY,MA7Ef,YAAsE,IAA5CC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,eAAgB9C,EAAiB,EAAjBA,cA6B5C+C,EARwB,WAC5B,IAAIC,EAAYH,EAAW,GACrBI,EAAahF,KAAKC,MAAM8E,EAAY,IAG1C,MAAO,CAACC,EAFRD,GAAqC,GAAbC,GAKLC,GA7B8C,EA8BzCzE,mBAASsE,EAAa,IA9BmB,mBA8B5DV,EA9B4D,KA8BrDc,EA9BqD,OA+B3C1E,mBAASsE,EAAa,IA/BqB,mBA+B5DK,EA/B4D,KA+BtDC,EA/BsD,KAiC7DC,EAAgB,SAAC5F,EAAKC,GAC1BA,EAAM8E,SAAS9E,GAAO,GACV,MAARD,GACFyF,EAASxF,GAAO,MACZA,GAAO,IAAI0F,EAAQ,MACnB1F,GAAO,GAAKyF,EAAO,IAAIC,EAAQ,MAG/BZ,SAASJ,GAAS,IAAM,KAAI1E,EAAM,GACtC0F,EAAQ1F,GAAO,QA0BnB,OAtBA4C,qBAAU,WACRuC,EAAeT,EAAOe,MAsBtB,yBAAK/F,UAAU,kBACb,kBAAC,EAAD,CAAY2E,OAAO,IAAIC,YAAa,KAAMC,QAASoB,EAAenB,MAAOE,IACzE,kBAAC,EAAD,CAAYL,OAAO,IAAIC,YAAa,KAAMC,QAASoB,EAAenB,MAAOiB,EAAMhB,SAAUC,GAAS,GAAIA,MAAOA,IAC7G,kBAAC,EAAD,CAAY5C,QAtBU,WACxB,IAAI8D,EAAM,GACNlB,GAAS,GAAKe,GAAQ,EACxBG,EAAM,CAACH,EAAM,OAENA,GAAQ,GAAKf,GAAS,EAC7BkB,EAAM,CAAClB,EAAO,QAEPA,GAAS,GAAKe,GAAQ,IAC7BG,EAAM,CAAClB,EAAO,OAAQe,EAAM,QAE9B,IAAMI,EAAiBD,EAAIzF,KAAK,KAEhC,OAAIyF,EAAInD,QAAU,EAAU,qCAErB,YAAcoD,EAAiB,YAOfC,GAAqB/D,SAAoB,IAAV2C,GAAwB,IAATe,EAAYxD,SAAUI,M,YCjEhF0D,MAVf,YAA6C,IAArBjE,EAAoB,EAApBA,QAASkE,EAAW,EAAXA,QAC/B,OACE,yBAAKtG,UAAU,gBACb,yBAAKA,UAAU,0BACf,yBAAKA,UAAU,yBAAyBoC,GACxC,yBAAKpC,UAAU,yBAAyBsG,GAAW,M,MCuD1CC,MA5Df,YAAkE,EAApCnE,QAAqC,IAA5BC,EAA2B,EAA3BA,SAAUT,EAAiB,EAAjBA,KAAM4E,EAAW,EAAXA,QAAW,EACpBpF,oBAAS,GADW,mBACzDqF,EADyD,KACzCC,EADyC,OAEhBtF,mBAAS,IAFO,mBAEzDuF,EAFyD,KAEvCC,EAFuC,KAIhE1D,qBAAU,WAIRO,MAAMoD,+DACHlD,MAAK,SAAAC,GAAG,OAAIA,EAAIQ,UAChBT,MAAK,SAACG,GAAa8C,EAAoB9C,QACzC,IAEH,IAAMc,EAAc,WAClB,OAAO+B,EAAiBxG,KAAI,SAAA2G,GAAI,OAC9BA,EAAKC,OAAO,GAAGC,cAAgBF,EAAK5C,MAAM,MACzCzD,KAAK,MAsBV,OACE,yBAAKT,UAAU,gCACXyG,GACE,yBAAKzG,UAAU,eAAf,6BAEE,2BACEiF,KAAK,OACLC,SAdS,SAACC,GAEpBA,EAAEpE,OAAO+D,MAAQK,EAAEpE,OAAO+D,MAAMZ,MAAM,EADnB,IAGnBsC,EAAQrB,EAAEpE,OAAO+D,QAWPF,YAAaA,OAIjB,yBAAK5E,UAAW,sBAAwBqC,EAAW,YAAc,IAAKZ,QA/B1D,WAClB,GAAKY,EAAL,CACA,IAAKoE,EAAgB,OAAOC,GAAkB,GAE1C9E,EAAKmB,QAAU,GACjByD,EAAQ5B,KAIVvD,OAAO4F,KADKvD,qDACK,SAAU,6BAuBnB,yBAAK1D,UAAU,+BAAf,iBAEIqC,GAAY,0BAAMrC,UAAU,cAAhB,Y,MCvCbkH,MAdf,YAAyC,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,UACzB,OACE,yBAAKpH,UAAW,YAAcoH,EAAY,GAAK,sBAE3CA,EACE,4BAAQpH,UAAU,eAAeqH,MAAOF,EAAMxF,GAAIM,IAAK,wCAA0CkF,EAAMxF,GAAI2F,YAAY,GAAGC,kBAAkB,OAAOC,MAAM,oBACvJ,oCAAE,yBAAKxH,UAAU,cAAciC,IAAKkF,EAAMtF,UAAWK,IAAKiF,EAAMxF,KAClE,yBAAK3B,UAAU,cAAcmH,EAAMvF,MACnC,yBAAK5B,UAAU,iBAAiBmH,EAAMM,QAAQhH,KAAK,UCuE9CiH,MA3Ef,YAYI,IAXFlC,EAWC,EAXDA,SACAnB,EAUC,EAVDA,WACA5B,EASC,EATDA,YACAkF,EAQC,EARDA,OACAC,EAOC,EAPDA,aACAjF,EAMC,EANDA,cACAkF,EAKC,EALDA,YACAjG,EAIC,EAJDA,KACA4E,EAGC,EAHDA,QACAsB,EAEC,EAFDA,YACAC,EACC,EADDA,YACC,EAC6B3G,oBAAS,GADtC,mBACM4G,EADN,KACeC,EADf,KAGD/E,qBAAU,WACR,KAAIsC,GAAY,GAAKnB,EAAWtB,QAAU,GAA1C,CACA8E,GAAY,GAEZ,IACMK,EAAMrB,4DAAyBrB,EAAW,iBAAmBnB,EAAW5D,KAAK,KAAO,iBAAmBgC,EAE7GgB,MAAMyE,GAAKvE,MAAK,SAAAC,GAAG,OAAIA,EAAIQ,UAAQT,MAAK,SAACG,GACvCmE,GAAW,GACXL,EAAa9D,EAAOqE,OAAOR,QAC3BE,GAAY,SAGb,CAACrC,EAAUnB,EAAY5B,EAAamF,EAAcC,IAErD3E,qBAAU,WACR,MAAK4E,GAAeH,EAAO5E,QAAU,GAAKsB,EAAWtB,QAAU,GAAKyC,GAAY,GAAK5D,EAAKmB,QAAU,GAApG,CAIA,IACMqF,EAAaT,EAAOxH,KAAI,SAAAkI,GAAE,OAAIA,EAAGC,OAAK7H,KAAK,KAC3C8H,EAAS,CACbC,aAAcV,EACdM,WAAYA,EACZK,QAAS7G,EACT8G,aAAcrE,EAAW5D,KAAK,MAGhCgD,MATiBC,mDASD,CACdiF,OAAQ,OACRC,KAAMxF,KAAKkB,UAAUiE,KACpB5E,MAAK,SAAAC,GAAG,OAAIA,EAAIQ,UAAQT,MAAK,SAACG,GAC/BiE,EAAYjE,EAAO+E,iBAGrBlG,EAAc,WACb,CAACmF,IAEJ,IAAMV,EAAYO,EAAO5E,QAAU,GAEnC,OACE,yBAAK/C,UACHgI,EACI,GACA,mBAAuBZ,EAAY,kBAAoB,2BAEzDY,EACE,kBAAC,EAAD,CAAc5F,QAAQ,uBAAuBkE,QAAQ,iDACrDqB,EAAOxH,KAAI,SAAAgH,GAAK,OAChB,kBAAC,EAAD,CAAUA,MAAOA,EAAOC,UAAWA,OAErCY,EACI,KACA,kBAAC,EAAD,CAAoB3F,UAAW2F,EAASzF,SAAUI,EAAef,KAAMA,EAAM4E,QAASA,M,MC/CnFsC,MAvBf,YAAyD,IAA5BC,EAA2B,EAA3BA,SAAUpG,EAAiB,EAAjBA,cAAiB,EACxBvB,oBAAS,GADe,mBAC/C4G,EAD+C,KACtCC,EADsC,KAUtD,OAPA/E,qBAAU,WACR,IAAM8F,EAAQC,YAAW,WACvBhB,GAAW,KACV,KACH,OAAO,kBAAMiB,aAAaF,MACzB,IAGD,yBAAKhJ,UAAU,qBACXgI,EACI,kBAAC,EAAD,CAAc5F,QAAQ,yBACtB,oCACF,4BAAQpC,UAAU,kBAAkBqH,MAAO0B,EAASpH,GAAIM,IAAK,2CAA6C8G,EAASpH,GAAI2F,YAAY,IAAIC,kBAAkB,OAAOC,MAAM,oBACtK,kBAAC,EAAD,CAAYpF,QAAQ,iCAAiCC,UAAU,EAAMC,QAAQ,EAAMC,SAAUI,O,MCHxFwG,MAhBf,YAA6C,IAAvBC,EAAsB,EAAtBA,SAKpB,OAL0C,EAAZC,SAO1B,yBAAKrJ,UAAW,aAAcyB,QANX,WACrB2H,EAAS,UAML,yBAAKpJ,UAAU,uBACb,0BAAMA,UAAU,cAAhB,QADF,SAIF,M,wBCqBSsJ,MAhCf,YAAsC,IAAjBnI,EAAgB,EAAhBA,aAAgB,EACCC,mBAAS,IADV,mBAC5BmI,EAD4B,KAChBC,EADgB,KAsBnC,OAnBAtG,qBAAU,WACR,IAAIuG,EAAS,GAeb,MAdqB,eAAjBtI,EACFsI,EAAM,yDAEkB,UAAjBtI,EACPsI,EAAM,kDAGkB,WAAjBtI,EACPsI,EAAM,8EAEkB,aAAjBtI,IACPsI,EAAM,+BAGDD,EAAcC,KACpB,CAACtI,IAGF,yBAAKnB,UAAW,aAAemB,EAAe,kBAC5C,yBAAKnB,UAAW,8BACbuJ,GAEH,yBAAKvJ,UAAW,gBAAkBmB,EAAe,SAAUc,IAAKyH,IAAOxH,IAAI,mBCqDlEyH,MA1Ef,YAQI,IAPFxI,EAOC,EAPDA,aACAwB,EAMC,EANDA,cACA0B,EAKC,EALDA,WAAYuF,EAKX,EALWA,cACZpE,EAIC,EAJDA,SAAUqE,EAIT,EAJSA,YACVlC,EAGC,EAHDA,OAAQmC,EAGP,EAHOA,UACRlI,EAEC,EAFDA,KAAM4E,EAEL,EAFKA,QACNuC,EACC,EADDA,SAAUhB,EACT,EADSA,YACT,EAC+B3G,oBAAS,GADxC,mBACMiI,EADN,KACgBxB,EADhB,OAEqCzG,mBAAS,IAF9C,mBAEMqB,EAFN,KAEmBC,EAFnB,OAGqCtB,mBAAS,IAH9C,mBAGM0G,EAHN,KAGmBiC,EAHnB,KAiDD,OA5CA7G,qBAAU,WACR7B,OAAO2I,iBAAiB,WAAW,SAACC,GAClC,IAAMzB,EAAeyB,EAAMC,KAAK1B,aAC3BA,GAILuB,EAAevB,MACd,KACF,IAEHtF,qBAAU,WACR,GAAI7B,OAAO8I,SAASC,KAAKrH,OAAS,EAAG,CACnC,IAAMqH,EAAO/I,OAAO8I,SAASC,KACvB5B,EAAe4B,EAAKC,UAAUD,EAAKpG,QAAQ,KAAO,EAAGoG,EAAKpG,QAAQ,MAExE3C,OAAOiJ,OAAOC,YAAY,CAAC/B,aAAcA,IACzCnH,OAAOmJ,WAER,IA0BD,yBAAKxK,UAAU,mBACM,eAAjBmB,GAAiC,kBAAC,EAAD,CAAqBsB,YAAaA,EAAaC,eAAgBA,EAAgBX,iBAzB7F,SAAC0I,GACxB,IAAIC,EAAiBrG,EACfsG,EAAYD,EAAe1G,QAAQyG,GAErCE,GAAa,EAEfD,EAAeE,OAAOD,EAAW,GAGjCD,EAAeG,KAAKJ,GAGtBb,EAAcc,IAa0I9H,mBAAoByB,EAAY1B,cAAeA,IAClL,UAAjBxB,GAA4B,kBAAC,EAAD,CAAgBqE,SAAUA,EAAUC,eAX/C,SAACT,EAAOe,GAC7B,IAAM+E,EAAgC,GAAvB1F,SAASJ,GAAS,GAAU,GACrC+F,EAA+B,GAAtB3F,SAASW,GAAQ,GAGhC8D,EAFqBiB,EAASC,IAQsEpI,cAAeA,IAC9F,WAAjBxB,GAA6B,kBAAC,EAAD,CAAiBqE,SAAUA,EAAUnB,WAAYA,EAAY5B,YAAaA,EAAakF,OAAQA,EAAQC,aAAckC,EAAWnH,cAAeA,EAAekF,YAAaA,EAAajG,KAAMA,EAAM4E,QAASA,EAASsB,YAAaA,EAAaC,YAAaA,IACzQ,aAAjB5G,GAA+B,kBAAC,EAAD,CAAmB4H,SAAUA,EAAUpG,cAAeA,IAEpE,eAAjBxB,GACsB,aAAjBA,GACA,kBAAC,EAAD,CAAYiI,SAAUzG,EAAe0G,SAAUA,IAGlD,kBAAC,EAAD,CAAWlI,aAAcA,MCzE7B6J,EAAmB,CACvB7J,aAAc,cAEV8J,EAAQ,CAAC,aAAc,QAAS,SAAU,YAC1CC,EAAc,SAACC,EAAOC,GAC1B,OAAOA,GACL,IAAK,OACH,IAAMC,EAAkBJ,EAAMjH,QAAQmH,EAAMhK,cAAgB,EAC5D,MAAO,CAAEA,aAAc8J,EAAMI,IAC/B,IAAK,OACH,IAAMC,EAAsBL,EAAMjH,QAAQmH,EAAMhK,cAAgB,EAChE,MAAO,CAAEA,aAAc8J,EAAMK,IAC/B,IAAK,SACH,OAAOjK,OAAO8I,SAAS7H,SACzB,QACE,MAAM,IAAIiJ,QAwCDC,MApCf,WAAgB,IAAD,EACsBC,qBAAWP,EAAaF,GAD9C,mBACNU,EADM,KACK/I,EADL,OAEuBvB,mBAAS,IAFhC,mBAENiD,EAFM,KAEMuF,EAFN,OAGmBxI,mBAAS,GAH5B,mBAGNoE,EAHM,KAGIqE,EAHJ,OAIezI,mBAAS,IAJxB,mBAINuG,EAJM,KAIEmC,EAJF,OAKW1I,mBAAS,IALpB,mBAKNQ,EALM,KAKA4E,EALA,OAMmBpF,mBAAS,IAN5B,mBAMN2H,EANM,KAMIhB,EANJ,KAQPhI,EAAiB,CACrBsE,WAAYA,EACZmB,SAAUA,EACVmG,YAAahE,EAAO5E,OACpBnB,KAAMA,EACNgK,YAAa7C,EAAS6C,aAGxB,OACE,yBAAK5L,UAAU,OACb,yBAAKA,UAAU,eACb,kBAAC,EAAD,CACEmB,aAAcuK,EAAUvK,aACxBwB,cAAeA,EACf0B,WAAYA,EAAYuF,cAAeA,EACvCpE,SAAUA,EAAUqE,YAAaA,EACjClC,OAAQA,EAAQmC,UAAWA,EAC3BlI,KAAMA,EAAM4E,QAASA,EACrBuC,SAAUA,EAAUhB,YAAaA,KAGrC,yBAAK/H,UAAU,gBACb,kBAAC,EAAD,CAAWmB,aAAcuK,EAAUvK,aAAcpB,eAAgBA,OC3CrD8L,QACW,cAA7BxK,OAAO8I,SAAS2B,UAEe,UAA7BzK,OAAO8I,SAAS2B,UAEhBzK,OAAO8I,SAAS2B,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB5I,MAAK,SAAA6I,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.30aff469.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spoopi-arrow.0452a0a7.png\";","import React from \"react\"\nimport \"./SpoopiStatus.css\"\n\nfunction SpoopiStatus({ spoopiPlaylist }) {\n  const getSpoopiStatus = (item) => {\n    const key = item[0]\n    const val = item[1]\n    switch(key) {\n      case \"categories\":\n        return [\"categories\", val.map(c => c.replace(\"_\", \" \")).join(\", \")]\n      case \"duration\":\n        let m = val / 60\n        const h = Math.floor(m / 60)\n        m = m - h * 60\n\n        return [\"duration\", h + \"h \" + m + \"m\"]\n      case \"track_count\":\n        return [\"# of songs\", val]\n      case \"name\":\n        return [\"name\", val]\n      case \"spotify_url\":\n        return [\n          \"spotify link\",\n          <a href={val} target=\"_blank\" rel=\"noopener noreferrer\">click to open in spotify</a>\n        ]\n      default:\n        return null\n    }\n  }\n\n  return(\n    <div className=\"SpoopiStatus\">\n      <table>\n        { Object.entries(spoopiPlaylist).map((item) => {\n          if (!item[1]) { return null }\n\n          const [key, val] = getSpoopiStatus(item)\n          return <tr>\n            <td className=\"t-key\">{key}</td>\n            <td className=\"t-val\">{val}</td>\n          </tr>\n        })}\n      </table>\n    </div>\n  )\n}\n\nexport default SpoopiStatus\n","import React, { useState } from 'react'\nimport \"./SpoopiNav.css\"\n\nimport SpoopiStatus from \"./SpoopiStatus\"\n\nfunction SpoopiNav({ current_page, spoopiPlaylist }) {\n  const [showInfo, setShowInfo] = useState(window.innerWidth >= 800)\n  const introText = `welcome to spoopi! here you can create timed spotify playlists. just give spoopi some categories and a duration and it'll find songs that fit into the time you gave it. have fun!`\n\n  const handleShowInfo = () => {\n    setShowInfo(!showInfo)\n  }\n\n  return(\n    <div className=\"SpoopiNav\">\n      <div className=\"spoopi-logo cursive\">spoopi</div>\n      <div className=\"spoopi-description\">(spo)tify (p)laylist t(i)mer</div>\n      <div className={\"spoopi-info\" + (showInfo ? \" info-clicked\" : \"\")} onClick={handleShowInfo}>\n        { current_page === \"categories\" ? \"?\" : <span>&#9776;</span> }\n      </div>\n    { current_page === \"categories\" && showInfo &&\n      <div className=\"spoopi-intro cursive\">{introText}</div> }\n\n    { current_page !== \"categories\" && showInfo &&\n        <SpoopiStatus spoopiPlaylist={spoopiPlaylist}/> }\n    </div>\n  )\n}\n\nexport default SpoopiNav\n","import React from 'react'\nimport \"./CategoryBox.css\"\n\nfunction CategoryBox({ id, name, image_url, handleCatCount, handleCategories, isSelected }) {\n  const handleClick = () => {\n    const increment = isSelected ? -1 : 1\n    const current_count = handleCatCount(increment)\n\n    if (current_count <= 5) {\n      handleCategories(id)\n    }\n  }\n\n  return(\n    <div className={\"CategoryBox\" + (isSelected ? \" category-selected\" : \"\")} onClick={handleClick}>\n      <img className=\"category-image\" src={image_url} alt={id}/>\n      <div className=\"category-name\">{name}</div>\n    </div>\n  )\n}\n\nexport default CategoryBox\n","import React from \"react\"\nimport \"./NextButton.css\"\n\nfunction NextButton({ content, nextable, reload, nextPage }) {\n  const handleNextPage = () => {\n    if (reload) {\n      return nextable && nextPage(\"reload\")\n    }\n\n    nextable && nextPage(\"next\")\n  }\n\n  return(\n    <div className={\"NextButton\" + (nextable ? \" nextable\" : \"\")} onClick={handleNextPage}>\n      <div className=\"next-button-content\">\n        {content}\n        { nextable && <span className=\"next-arrow\">&#187;</span> }\n      </div>\n    </div>\n  )\n}\n\nexport default NextButton\n","import React, { useState, useEffect } from 'react'\nimport \"./CategoriesContainer.css\"\n\nimport CategoryBox from \"./CategoryBox\"\nimport NextButton from \"../NextButton\"\n\nfunction CategoriesContainer({ countryCode, setCountryCode, handleCategories, pageTraversal, selectedCategories }) {\n  const [allCategories, setAllCategories] = useState([])\n  const [catCount, setCatCount] = useState(selectedCategories.length)\n\n  useEffect(() => {\n    const local_categories = JSON.parse(localStorage.getItem(\"allCategories\"))\n    const local_countryCode = localStorage.getItem(\"countryCode\")\n    if (local_categories && local_countryCode) {\n      setCountryCode(local_countryCode)\n      setAllCategories(local_categories)\n      return\n    }\n\n    // get user's country code\n    fetch(process.env.REACT_APP_IP_API_URL)\n      .then(res => res.text())\n      .then(\n        (result) => {\n          const ind = result.indexOf(\"loc\")\n          const country_code = result.slice(ind + 4, ind + 6)\n          setCountryCode(country_code)\n          localStorage.setItem(\"countryCode\", country_code)\n        })\n\n    const query = countryCode ? \"?country_code=\" + countryCode : \"\"\n    fetch(process.env.REACT_APP_SPOOPI_API_URL + \"/categories\" + query)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setAllCategories(result.categories)\n          localStorage.setItem(\"allCategories\", JSON.stringify(result.categories))\n        }\n      )\n  }, [countryCode, setCountryCode])\n\n  const handleCatCount = (increment) => {\n    const new_count = catCount + increment\n    if (new_count <= 5) {\n      setCatCount(new_count) \n    }\n\n    return new_count\n  }\n\n  const nextButtonContent = () => {\n    if (catCount === 5) {\n      return \"5 of 5 selected\"\n    }\n    else if (catCount >= 1) {\n      return catCount + \" selected\"\n    }\n    else {\n      return \"Choose up to 5 categories\"\n    }\n  }\n\n  return(\n    <div className=\"CategoriesContainer\">\n      {allCategories.map(cat => (\n        <CategoryBox\n          id={cat.id}\n          name={cat.name}\n          image_url={cat.image_url}\n          handleCatCount={handleCatCount}\n          handleCategories={handleCategories}\n          isSelected={selectedCategories.indexOf(cat.id) >= 0}\n        />\n      ))}\n        <NextButton content={nextButtonContent()} nextable={catCount >= 1} nextPage={pageTraversal}/>\n    </div>\n  )\n}\n\nexport default CategoriesContainer\n","import React from \"react\"\nimport \"./TimerInput.css\"\n\nfunction TimerInput({ symbol, placeholder, setTime, value, readonly, hours }) {\n  const handleChange = (e) => {\n    const max_length = 2\n    e.target.value = e.target.value.slice(0, max_length)\n\n    const val = parseInt(e.target.value)\n    if (symbol === \"h\" && val > 12) {\n      e.target.value = 12\n    }\n    else if (symbol === \"m\") {\n      if (val > 59) {\n        e.target.value = 59\n      }\n    }\n\n    if (val < 0) e.target.value = 0\n\n    setTime(symbol, e.target.value)\n  }\n\n  const handleBlur = (e) => {\n    if (symbol !== \"m\") return\n\n    const val = parseInt(e.target.value || 0)\n    hours = parseInt(hours || 0)\n    if (hours <= 0 && val < 15) {\n      setTime(symbol, 15)\n    }\n  }\n\n\n  return(\n    <div className=\"TimerInput\">\n      <input\n        type=\"number\"\n        onChange={handleChange}\n        placeholder={placeholder}\n        value={value === 0 ? \"\" : value}\n        readOnly={readonly}\n        onBlur={handleBlur}\n      />\n      <div className=\"input-symbol\">{symbol}</div>\n    </div>\n  )\n}\n\nexport default TimerInput\n","import React, { useState, useEffect } from \"react\"\nimport \"./TimerContainer.css\"\n\nimport TimerInput from \"./TimerInput\"\nimport NextButton from \"../NextButton\"\n\nfunction TimerContainer({ duration, handleDuration, pageTraversal }) {\n  // NOTE: keeping this here in case i want to use it again\n  // const createPlaceholder = () => {\n  //   const max_hours = 12\n  //   const min_minutes = 15\n\n  //   let hours = Math.floor(Math.random() * max_hours + 1)\n  //   let minutes = 0\n  //   if (hours >= 12) {\n  //     minutes = 0\n  //   }\n  //   else if (hours <= 0) {\n  //     minutes = min_minutes\n  //   }\n  //   else {\n  //     minutes = Math.floor(Math.random() * 60)\n  //   }\n\n  //   return [hours, minutes]\n  // }\n\n  const calculateInitDuration = () => {\n    let init_mins = duration / 60\n    const init_hours = Math.floor(init_mins / 60)\n    init_mins = init_mins - init_hours * 60 \n\n    return [init_hours, init_mins]\n  }\n\n  const initDuration = calculateInitDuration()\n  const [hours, setHours] = useState(initDuration[0])\n  const [mins, setMins] = useState(initDuration[1])\n\n  const handleSetTime = (key, val) => {\n    val = parseInt(val || 0)\n    if (key === \"h\") {\n      setHours(val || null)\n      if (val >= 12) setMins(\"00\")\n      if (val <= 0 && mins < 15) setMins(15)\n    }\n    else {\n      if (parseInt(hours || 0) >= 12) val = 0\n      setMins(val || null)\n    }\n  }\n\n  useEffect(() => {\n    handleDuration(hours, mins)\n  })\n\n  const nextButtonContent = () => {\n    let arr = []\n    if (hours <= 0 && mins >= 1) {\n      arr = [mins, \"min\"]\n    }\n    else if (mins <= 0 && hours >= 1) {\n      arr = [hours, \"hour\"]\n    }\n    else if (hours >= 1 && mins >= 1) {\n      arr = [hours, \"hour\", mins, \"min\"]\n    }\n    const formatted_time = arr.join(\" \")\n\n    if (arr.length <= 0) return \"Enter a duration for your playlist\"\n\n    return \"Create a \" + formatted_time + \" playlist\"\n  }\n\n  return(\n    <div className=\"TimerContainer\">\n      <TimerInput symbol=\"h\" placeholder={\"00\"} setTime={handleSetTime} value={hours}/>\n      <TimerInput symbol=\"m\" placeholder={\"00\"} setTime={handleSetTime} value={mins} readonly={hours >= 12} hours={hours}/>\n      <NextButton content={nextButtonContent()} nextable={hours !== 0 || mins !== 0} nextPage={pageTraversal}/>\n    </div>\n  )\n}\n\nexport default TimerContainer\n","import React from \"react\"\nimport \"./SpoopiLoader.css\"\n\nfunction SpoopiLoader({ content, warning }) {\n  return(\n    <div className=\"SpoopiLoader\">\n      <div className=\"spoopi-loader-spinner\"></div>\n      <div className=\"spoopi-loader-content\">{content}</div>\n      <div className=\"spoopi-loader-warning\">{warning || \"\"}</div>\n    </div>\n  )\n}\n\nexport default SpoopiLoader\n","import React, { useState, useEffect } from \"react\"\nimport \"./AddToSpotifyButton.css\"\n\nfunction AddToSpotifyButton({ content, nextable, name, setName }) {\n  const [showSpoopiName, setShowSpoopiName] = useState(false)\n  const [placeholderWords, setPlaceholderWords] = useState([])\n\n  useEffect(() => {\n    const base_url = process.env.REACT_APP_RANDOM_WORD_API_URL + \"/word?swear=0&\"\n    const word_count = \"number=\" + 2\n\n    fetch(base_url + word_count)\n      .then(res => res.json())\n      .then((result) => { setPlaceholderWords(result) })\n  }, [])\n\n  const placeholder = () => {\n    return placeholderWords.map(word => (\n      word.charAt(0).toUpperCase() + word.slice(1)\n    )).join(\" \")\n  }\n\n  const handleClick = () => {\n    if (!nextable) return\n    if (!showSpoopiName) return setShowSpoopiName(true)\n\n    if (name.length <= 0) {\n      setName(placeholder())\n    }\n\n    const url = process.env.REACT_APP_SPOOPI_API_URL + \"/authenticate_user\"\n    window.open(url, \"_blank\", \"titlebar=no, status=no\");\n  }\n\n  const handleChange = (e) => {\n    const max_length = 30\n    e.target.value = e.target.value.slice(0, max_length)\n\n    setName(e.target.value)\n  }\n\n  return(\n    <div className=\"AddToSpotifyButton-container\">\n      { showSpoopiName &&\n          <div className=\"spoopi-name\">\n            Give your playlist a name:\n            <input\n              type=\"text\"\n              onChange={handleChange}\n              placeholder={placeholder()}\n            />\n          </div>\n      }\n          <div className={\"AddToSpotifyButton\" + (nextable ? \" nextable\" : \"\")} onClick={handleClick}>\n            <div className=\"addtospotify-button-content\">\n              Add to Spotify\n              { nextable && <span className=\"next-arrow\">&#187;</span> }\n            </div>\n          </div>\n    </div>\n  )\n}\n\nexport default AddToSpotifyButton\n","import React from \"react\"\nimport \"./TrackBox.css\"\n\nfunction TrackBox({ track, useIframe }) {\n  return(\n    <div className={\"TrackBox\" + (useIframe ? \"\" : \" spoopi-track-box\")}>\n      {\n        useIframe\n        ? <iframe className=\"track-iframe\" title={track.id} src={\"https://open.spotify.com/embed/track/\" + track.id} frameborder=\"\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n          : <><img className=\"track-image\" src={track.image_url} alt={track.id}/>\n          <div className=\"track-name\">{track.name}</div>\n          <div className=\"track-artists\">{track.artists.join(\", \")}</div></>\n      }\n    </div>\n  )\n}\n\nexport default TrackBox\n","import React, { useEffect, useState } from \"react\"\nimport \"./TracksContainer.css\"\n\nimport SpoopiLoader from \"../SpoopiLoader\"\nimport AddToSpotifyButton from \"../AddToSpotifyButton\"\nimport TrackBox from \"./TrackBox\"\n\nfunction TracksContainer({\n  duration,\n  categories,\n  countryCode,\n  tracks,\n  handleTracks,\n  pageTraversal,\n  setBackable,\n  name,\n  setName,\n  accessToken,\n  setPlaylist\n}) {\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    if (duration <= 0 || categories.length <= 0) return\n    setBackable(false)\n\n    const base_url = process.env.REACT_APP_SPOOPI_API_URL + \"/generate_tracks\"\n    const url = base_url + \"?seconds=\" + duration + \"&category_ids=\" + categories.join(\",\") + \"&country_code=\" + countryCode\n\n    fetch(url).then(res => res.json()).then((result) => {\n      setLoading(false)\n      handleTracks(result.spoopi.tracks)\n      setBackable(true)\n    })\n\n  }, [duration, categories, countryCode, handleTracks, setBackable])\n\n  useEffect(() => {\n    if (!accessToken || tracks.length <= 0 || categories.length <= 0 || duration <= 0 || name.length <= 0) {\n      return\n    }\n\n    const base_url = process.env.REACT_APP_SPOOPI_API_URL + \"/create_playlist\"\n    const track_uris = tracks.map(tr => tr.uri).join(\",\")\n    const params = {\n      access_token: accessToken,\n      track_uris: track_uris,\n      pl_name: name,\n      category_ids: categories.join(\",\")\n    }\n\n    fetch(base_url, {\n      method: \"POST\",\n      body: JSON.stringify(params)\n    }).then(res => res.json()).then((result) => {\n      setPlaylist(result.new_playlist)\n    })\n\n    pageTraversal(\"next\")\n  }, [accessToken])\n\n  const useIframe = tracks.length <= 20\n\n  return(\n    <div className={\n      loading\n        ? \"\"\n        : \"TracksContainer\"  + ( useIframe ? \" iframe-columns\" : \" spoopi-tracks-columns\")\n      }>\n      { loading\n        ? <SpoopiLoader content=\"Generating tracks...\" warning=\"This could take a while for longer playlists\"/>\n        : tracks.map(track => (\n          <TrackBox track={track} useIframe={useIframe}/>))\n      }\n      { loading\n          ? null\n          : <AddToSpotifyButton nextable={!loading} nextPage={pageTraversal} name={name} setName={setName}/>\n      }\n    </div>\n  )\n}\n\nexport default TracksContainer\n","import React, { useState, useEffect } from \"react\"\nimport \"./PlaylistContainer.css\"\n\nimport SpoopiLoader from \"../SpoopiLoader\"\nimport NextButton from \"../NextButton\"\n\nfunction PlaylistContainer({ playlist, pageTraversal }) {\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setLoading(false)\n    }, 2000)\n    return () => clearTimeout(timer)\n  }, [])\n\n  return(\n    <div className=\"PlaylistContainer\">\n      { loading\n          ? <SpoopiLoader content=\"Fetching playlist...\"/>\n          : <>\n          <iframe className=\"playlist-iframe\" title={playlist.id} src={\"https://open.spotify.com/embed/playlist/\" + playlist.id} frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n          <NextButton content=\"Create another Spoopi Playlist\" nextable={true} reload={true} nextPage={pageTraversal}/>\n          </>\n      }\n    </div>\n  )\n}\n\nexport default PlaylistContainer\n","import React from \"react\"\nimport \"./BackButton.css\"\n\nfunction BackButton({ backPage, backable }) {\n  const handleBackPage = () => {\n    backPage(\"back\")\n  }\n\n  return(\n    backable\n    ? <div className={\"BackButton\"} onClick={handleBackPage}>\n        <div className=\"back-button-content\">\n          <span className=\"back-arrow\">&#171;</span>Back \n        </div>\n      </div>\n    : null\n  )\n}\n\nexport default BackButton\n","import React, { useState, useEffect } from \"react\"\nimport \"./SpoopiTip.css\"\nimport arrow from \"./spoopi-arrow.png\"\n\nfunction SpoopiTip({ current_page }) {\n  const [tipContent, setTipContent] = useState(\"\")\n\n  useEffect(() => {\n    let tipcon = \"\"\n    if (current_page === \"categories\") {\n      tipcon = `choose which categories you want your playlist to have`\n    }\n    else if (current_page === \"timer\") {\n      tipcon = `select a duration between\n15 mins and 12 hours`\n    }\n    else if (current_page === \"tracks\") {\n      tipcon = `pro-tip: shorter playlists' songs can be previewed before adding to spotify`\n    }\n    else if (current_page === \"playlist\") {\n      tipcon = `enjoy your spoopi playlist!`\n    }\n\n    return setTipContent(tipcon)\n  }, [current_page])\n\n  return(\n    <div className={\"SpoopiTip \" + current_page + \"-tip-container\"}>\n      <div className={\"spoopi-tip-content cursive\"}>\n        {tipContent}\n      </div>\n      <img className={\"spoopi-arrow \" + current_page + \"-arrow\"} src={arrow} alt=\"spoopi-arrow\"/>\n    </div>\n  )\n}\n\nexport default SpoopiTip\n","import React, { useState, useEffect } from 'react'\nimport \"./SpoopiContainer.css\"\n\nimport CategoriesContainer from \"./categories/CategoriesContainer\"\nimport TimerContainer from \"./timer/TimerContainer\"\nimport TracksContainer from \"./tracks/TracksContainer\"\nimport PlaylistContainer from \"./playlist/PlaylistContainer\"\nimport BackButton from \"./BackButton\"\nimport SpoopiTip from \"./SpoopiTip\"\n\nfunction SpoopiContainer({\n  current_page,\n  pageTraversal,\n  categories, setCategories,\n  duration, setDuration,\n  tracks, setTracks,\n  name, setName,\n  playlist, setPlaylist\n}) {\n  const [backable, setBackable] = useState(true)\n  const [countryCode, setCountryCode] = useState(\"\")\n  const [accessToken, setAccessToken] = useState(\"\")\n\n  useEffect(() => {\n    window.addEventListener(\"message\", (event) => {\n      const access_token = event.data.access_token\n      if (!access_token) {\n        return\n      }\n\n      setAccessToken(access_token)\n    }, false)\n  }, [])\n\n  useEffect(() => {\n    if (window.location.hash.length > 0) {\n      const hash = window.location.hash\n      const access_token = hash.substring(hash.indexOf(\"=\") + 1, hash.indexOf(\"&\"))\n\n      window.opener.postMessage({access_token: access_token})\n      window.close()\n    }\n  }, [])\n\n  const handleCategories = (category_id) => {\n    let new_categories = categories\n    const cat_index = new_categories.indexOf(category_id)\n\n    if (cat_index >= 0) {\n      // category already in array so remove it\n      new_categories.splice(cat_index, 1)\n    }\n    else {\n      new_categories.push(category_id)\n    }\n\n    setCategories(new_categories)\n  }\n\n  const handleDuration = (hours, mins) => {\n    const h_in_s = parseInt(hours || 0) * 60 * 60\n    const m_in_s = parseInt(mins || 0) * 60\n    const new_duration = h_in_s + m_in_s\n\n    setDuration(new_duration)\n  }\n\n  return(\n    <div className=\"SpoopiContainer\">\n      { current_page === \"categories\" && <CategoriesContainer countryCode={countryCode} setCountryCode={setCountryCode} handleCategories={handleCategories} selectedCategories={categories} pageTraversal={pageTraversal}/> }\n      { current_page === \"timer\" && <TimerContainer duration={duration} handleDuration={handleDuration} pageTraversal={pageTraversal}/> }\n      { current_page === \"tracks\" && <TracksContainer duration={duration} categories={categories} countryCode={countryCode} tracks={tracks} handleTracks={setTracks} pageTraversal={pageTraversal} setBackable={setBackable} name={name} setName={setName} accessToken={accessToken} setPlaylist={setPlaylist}/> }\n      { current_page === \"playlist\" && <PlaylistContainer playlist={playlist} pageTraversal={pageTraversal}/> }\n\n      { current_page !== \"categories\"\n          && current_page !== \"playlist\"\n          && <BackButton backPage={pageTraversal} backable={backable}/>\n      }\n\n          <SpoopiTip current_page={current_page}/>\n    </div>\n  )\n}\n\nexport default SpoopiContainer\n","import React, { useState, useReducer } from 'react';\nimport './App.css';\n\nimport SpoopiNav from \"./components/SpoopiNav\"\nimport SpoopiContainer from \"./components/SpoopiContainer\"\n\nconst initialPageState = {\n  current_page: \"categories\",\n}\nconst pages = [\"categories\", \"timer\", \"tracks\", \"playlist\"]\nconst pageReducer = (state, action) => {\n  switch(action) {\n    case \"next\":\n      const next_page_index = pages.indexOf(state.current_page) + 1\n      return { current_page: pages[next_page_index] }\n    case \"back\":\n      const previous_page_index = pages.indexOf(state.current_page) - 1\n      return { current_page: pages[previous_page_index] }\n    case \"reload\":\n      return window.location.reload()\n    default:\n      throw new Error()\n  }\n}\n\nfunction App() {\n  const [pageState, pageTraversal] = useReducer(pageReducer, initialPageState)\n  const [categories, setCategories] = useState([])\n  const [duration, setDuration] = useState(0)\n  const [tracks, setTracks] = useState([])\n  const [name, setName] = useState(\"\")\n  const [playlist, setPlaylist] = useState({})\n\n  const spoopiPlaylist = {\n    categories: categories,\n    duration: duration,\n    track_count: tracks.length,\n    name: name,\n    spotify_url: playlist.spotify_url\n  }\n\n  return(\n    <div className=\"App\">\n      <div className=\"column left\">\n        <SpoopiContainer\n          current_page={pageState.current_page}\n          pageTraversal={pageTraversal}\n          categories={categories} setCategories={setCategories}\n          duration={duration} setDuration={setDuration}\n          tracks={tracks} setTracks={setTracks}\n          name={name} setName={setName}\n          playlist={playlist} setPlaylist={setPlaylist}\n        />\n      </div>\n      <div className=\"column right\">\n        <SpoopiNav current_page={pageState.current_page} spoopiPlaylist={spoopiPlaylist}/>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}